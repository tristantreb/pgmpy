name: Build and Run Test Suite

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on: [push, pull_request]

jobs:
  test-nosoftdeps:
    name: Tests with soft dependencies - OS - (${{ matrix.os }}; Python - ${{ matrix.python-version}})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ (matrix.os == 'windows-latest' && matrix.python-version == '3.13') && '3.13.6' || matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ (matrix.os == 'windows-latest' && matrix.python-version == '3.13') && '3.13.6' || matrix.python-version }}
          cache: pip

      - name: Print Python info
        run: |
          which python
          python --version

      - name: Install graphviz (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install graphviz -y

      - name: Install graphviz (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install graphviz -y

      - name: Install graphviz (macOS)
        if: matrix.os == 'macOS-latest'
        run: brew install graphviz

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pytest-split
          pip install .[tests] --no-cache-dir

      - name: Print installed packages
        run: pip freeze

      - name: Run tests
        run: pytest --verbose --junitxml=test-results.xml

  test-fulldep:
    name: Test with full dependencies - OS - ${{ matrix.os }}; Python - ${{ matrix.python-version}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ (matrix.os == 'windows-latest' && matrix.python-version == '3.13') && '3.13.6' || matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ (matrix.os == 'windows-latest' && matrix.python-version == '3.13') && '3.13.6' || matrix.python-version }}
          cache: pip

      - name: Print Python info
        run: |
          which python
          python --version

      - name: Install graphviz (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install graphviz -y

      - name: Install graphviz (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install graphviz -y

      - name: Install graphviz (macOS)
        if: matrix.os == 'macOS-latest'
        run: brew install graphviz

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pytest-split
          pip install .[all,tests] --no-cache-dir

      - name: Print installed packages
        run: pip freeze

      - name: Run tests
        run: pytest --cov-config .coveragerc --cov-report html --cov-report term --cov=pgmpy --verbose --junitxml=test-results.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        uses: codecov/test-results-action@v1
        with:
          files: test-results.xml
